```{r}
library(tidyverse)
library(broom)
library(patchwork)

```

```{r}
data <- read.csv("../data/augmented.csv")
colnames(data)
```

```{r}
# Summary statistics for numeric variables
summary_stats <- data %>%
  select(sbp, tobacco, ldl, adiposity, typea, obesity, alcohol, age) %>%
  summary()
```

```{r}
# Count of each unique value for the 'famhist' variable
famhist_counts <- data %>%
  count(famhist)
```

```{r}
# Count of each unique combination of 'famhist' and 'chd' variables
famhist_chd_counts <- data %>%
  count(famhist, chd)
```

```{r}
# Display the results
print("Summary Statistics:")
print(summary_stats)
```

```{r}
print(famhist_counts)
```

```{r}
print(famhist_chd_counts)
```

```{r}
numeric_vars <- c("sbp", "tobacco", "ldl", "adiposity", "typea", "obesity", "alcohol", "age")

data %>%
  select(all_of(numeric_vars)) %>%
  gather() %>%
  ggplot(aes(x = value)) +
  geom_histogram(binwidth = 5, fill = "skyblue", color = "black") +
  facet_wrap(~ key, scales = "free") +
  labs(title = "Distribution of Numeric Variables", x = "Value", y = "Frequency") +
  theme_minimal()
```

```{r}
# Visualize relationships between numeric variables
numeric_correlation <- data %>%
  select(all_of(numeric_vars)) %>%
  cor()
```

```{r}
corrplot::corrplot(numeric_correlation, method = "circle")
```

```{r}
#correlation of variable with chd 
numeric_data <- data %>% select_if(is.numeric) %>% select(-chd)
corr_chd <- cor(numeric_data,data$chd)
corr_chd <- tibble(Variables = rownames(corr_chd), Correlation = round(corr_chd,4))
```



```{r}

# Explore the distribution of each categorical variable separately
categorical_vars <- c("famhist", "age_interval", "weight_status", "alcohol_status", "exercise_habits", "inheritance", "chd_status")

# Create a list of individual plots
plots_list <- map(categorical_vars, ~
  ggplot(data, aes_string(x = ., fill = .)) +
    geom_bar(stat = "count", position = "dodge") +
    labs(title = paste("Distribution of", .), x = ., y = "Count") +
    theme_minimal()+
    theme(axis.text.x = element_text(size = 6),       # Adjust x-axis label font size
          axis.text.y = element_text(size = 6),       # Adjust y-axis label font size
          axis.title = element_text(size = 8),       # Adjust axis title font size
          plot.title = element_text(size = 10))       # Adjust plot title font size
)

# Combine all individual plots into one using patchwork
combined_plot <- wrap_plots(plots_list)

# Display the combined plot
print(combined_plot)

```
```{r}

# Explore the distribution of each categorical variable separately
categorical_vars <- c("famhist", "age_interval", "weight_status", "alcohol_status", "exercise_habits", "inheritance", "chd_status")


# Create a list of individual plots
plots_list <- map(categorical_vars, ~
  ggplot(data, aes_string(x = ., fill = .)) +
    geom_bar(stat = "count", position = "dodge") +
    labs(title = paste("Distribution of", .), x = ., y = "Count") +
    theme_minimal() +
    theme(axis.text.x = element_text(size = 6),       # Adjust x-axis label font size
          axis.text.y = element_text(size = 6),       # Adjust y-axis label font size
          axis.title = element_text(size = 10),       # Adjust axis title font size
          plot.title = element_text(size = 12),      # Adjust plot title font size
          legend.text = element_text(size = 6))      # Adjust legend text font size
)

# Combine all individual plots into one using patchwork
combined_plot <- wrap_plots(plots_list)


# Display the combined plot
print(combined_plot)

```

```{r}
data %>% 
  group_by(age_interval,weight_status) %>% 
  summarise(n = n(), .groups = 'drop') %>% 
  ggplot(mapping = aes(x = age_interval, y = n, fill = weight_status)) +
  geom_bar(position = "stack", stat = "identity") + 
  theme_minimal() + 
  labs(y = "count")
```
